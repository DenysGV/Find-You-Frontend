import axios from "axios";
import { IRating, IRatingProps } from "../../types/IAccounts";
import { useParams } from "react-router-dom";
import IUser from "../../types/IUser";
import { useEffect, useState } from "react";

const AccountHeaderRating = ({ rating, setSeccess, setError }: IRatingProps) => {
   const apiUrl: string = 'http://167.86.84.197:5000/set-rate'
   const apiUrlCheck: string = 'http://167.86.84.197:5000/check-rate'
   const { accountId } = useParams<{ accountId: string }>();
   const storedUser = localStorage.getItem('user');
   const user: IUser | null = storedUser ? JSON.parse(storedUser) : null;
   const [ratingState, setRatingState] = useState<IRating[]>(rating)
   const [userRate, setUserRate] = useState<number | null>(null)

   const calculateAverageRating = (ratings: IRating[]): string => {
      if (ratings.length === 0) return '0'; // если нет рейтингов, возвращаем 0

      const totalRating = ratings.reduce((accum, rating) => accum + rating.rate, 0);
      return (totalRating / ratings.length).toFixed(1); // округляем до 2 знаков после запятой
   };

   const sendRatingHandler = async (i: number) => {
      try {
         if (user?.id && accountId) {
            await axios.post(apiUrl, {
               account_id: accountId,
               users_id: user?.id,
               rate: i,
            })

            setRatingState(prev => [...prev, {
               account_id: Number(accountId),
               users_id: user?.id,
               rate: i,
               id: 1
            }])
            setUserRate(i)
            setSeccess('Вы успешно поставили оценку этому аккаунту')
         } else {
            throw new Error()
         }
      } catch (error: any) {
         if (error.response.status === 401) {
            setError('Вы уже поставили оценку этому аккаунту')
            return
         }
         setError('Что-то пошло не так, попробуйте ещё раз!')
      }
   }

   const getRating = async () => {
      try {
         const res = await axios.post(apiUrlCheck, {
            account_id: accountId,
            users_id: user?.id,
         })

         setUserRate(res.data.rate ? res.data.rate : null)
      } catch (error) {
         setError('Что-то пошло не так, попробуйте ещё раз!')
      }
   }

   console.log(userRate);


   useEffect(() => {
      getRating()
   }, [])

   return (
      <div className="account-header-rate">
         <div className="account-header-rate__stars">
            <svg onClick={() => { sendRatingHandler(5) }} style={{ fill: userRate && userRate >= 5 ? '#FCD53F' : 'none' }} width="20" height="20" viewBox="0 0 70 70" fill='none' xmlns="http://www.w3.org/2000/svg">
               <path d="M43.3038 54.2267C39.6083 60.8533 37.7621 64.1667 35 64.1667C32.2379 64.1667 30.3917 60.8533 26.6963 54.2267L25.7396 52.5117C24.6896 50.6275 24.1646 49.6854 23.3479 49.0642C22.5313 48.4429 21.5104 48.2125 19.4688 47.7517L17.6138 47.3317C10.4388 45.7071 6.85417 44.8962 5.99959 42.1517C5.14792 39.41 7.59209 36.5487 12.4833 30.8292L13.7492 29.3504C15.1375 27.7258 15.8346 26.9121 16.1467 25.9088C16.4588 24.9025 16.3538 23.8175 16.1438 21.6504L15.9513 19.6758C15.2133 12.0429 14.8429 8.22792 17.0771 6.53333C19.3113 4.83875 22.6713 6.38458 29.3854 9.47625L31.1267 10.2754C33.0342 11.1563 33.9879 11.5938 35 11.5938C36.0121 11.5938 36.9658 11.1563 38.8733 10.2754L40.6117 9.47625C47.3288 6.38459 50.6888 4.83875 52.92 6.53042C55.1571 8.22792 54.7867 12.0429 54.0488 19.6758L53.8563 21.6475C53.6463 23.8175 53.5413 24.9025 53.8563 25.9058C54.1654 26.9121 54.8625 27.7258 56.2508 29.3475L57.5167 30.8292C62.4079 36.5458 64.8521 39.4071 64.0004 42.1517C63.1488 44.8963 59.5583 45.71 52.3833 47.3317L50.5283 47.7517C48.4896 48.2125 47.4717 48.4429 46.6521 49.0642C45.8325 49.6854 45.3104 50.6275 44.2604 52.5117L43.3038 54.2267Z" stroke="black" strokeWidth="4.375" />
            </svg>
            <svg onClick={() => { sendRatingHandler(4) }} style={{ fill: userRate && userRate >= 4 ? '#FCD53F' : 'none' }} width="20" height="20" viewBox="0 0 70 70" fill='none' xmlns="http://www.w3.org/2000/svg">
               <path d="M43.3038 54.2267C39.6083 60.8533 37.7621 64.1667 35 64.1667C32.2379 64.1667 30.3917 60.8533 26.6963 54.2267L25.7396 52.5117C24.6896 50.6275 24.1646 49.6854 23.3479 49.0642C22.5313 48.4429 21.5104 48.2125 19.4688 47.7517L17.6138 47.3317C10.4388 45.7071 6.85417 44.8962 5.99959 42.1517C5.14792 39.41 7.59209 36.5487 12.4833 30.8292L13.7492 29.3504C15.1375 27.7258 15.8346 26.9121 16.1467 25.9088C16.4588 24.9025 16.3538 23.8175 16.1438 21.6504L15.9513 19.6758C15.2133 12.0429 14.8429 8.22792 17.0771 6.53333C19.3113 4.83875 22.6713 6.38458 29.3854 9.47625L31.1267 10.2754C33.0342 11.1563 33.9879 11.5938 35 11.5938C36.0121 11.5938 36.9658 11.1563 38.8733 10.2754L40.6117 9.47625C47.3288 6.38459 50.6888 4.83875 52.92 6.53042C55.1571 8.22792 54.7867 12.0429 54.0488 19.6758L53.8563 21.6475C53.6463 23.8175 53.5413 24.9025 53.8563 25.9058C54.1654 26.9121 54.8625 27.7258 56.2508 29.3475L57.5167 30.8292C62.4079 36.5458 64.8521 39.4071 64.0004 42.1517C63.1488 44.8963 59.5583 45.71 52.3833 47.3317L50.5283 47.7517C48.4896 48.2125 47.4717 48.4429 46.6521 49.0642C45.8325 49.6854 45.3104 50.6275 44.2604 52.5117L43.3038 54.2267Z" stroke="black" strokeWidth="4.375" />
            </svg>
            <svg onClick={() => { sendRatingHandler(3) }} style={{ fill: userRate && userRate >= 3 ? '#FCD53F' : 'none' }} width="20" height="20" viewBox="0 0 70 70" fill='none' xmlns="http://www.w3.org/2000/svg">
               <path d="M43.3038 54.2267C39.6083 60.8533 37.7621 64.1667 35 64.1667C32.2379 64.1667 30.3917 60.8533 26.6963 54.2267L25.7396 52.5117C24.6896 50.6275 24.1646 49.6854 23.3479 49.0642C22.5313 48.4429 21.5104 48.2125 19.4688 47.7517L17.6138 47.3317C10.4388 45.7071 6.85417 44.8962 5.99959 42.1517C5.14792 39.41 7.59209 36.5487 12.4833 30.8292L13.7492 29.3504C15.1375 27.7258 15.8346 26.9121 16.1467 25.9088C16.4588 24.9025 16.3538 23.8175 16.1438 21.6504L15.9513 19.6758C15.2133 12.0429 14.8429 8.22792 17.0771 6.53333C19.3113 4.83875 22.6713 6.38458 29.3854 9.47625L31.1267 10.2754C33.0342 11.1563 33.9879 11.5938 35 11.5938C36.0121 11.5938 36.9658 11.1563 38.8733 10.2754L40.6117 9.47625C47.3288 6.38459 50.6888 4.83875 52.92 6.53042C55.1571 8.22792 54.7867 12.0429 54.0488 19.6758L53.8563 21.6475C53.6463 23.8175 53.5413 24.9025 53.8563 25.9058C54.1654 26.9121 54.8625 27.7258 56.2508 29.3475L57.5167 30.8292C62.4079 36.5458 64.8521 39.4071 64.0004 42.1517C63.1488 44.8963 59.5583 45.71 52.3833 47.3317L50.5283 47.7517C48.4896 48.2125 47.4717 48.4429 46.6521 49.0642C45.8325 49.6854 45.3104 50.6275 44.2604 52.5117L43.3038 54.2267Z" stroke="black" strokeWidth="4.375" />
            </svg>
            <svg onClick={() => { sendRatingHandler(2) }} style={{ fill: userRate && userRate >= 2 ? '#FCD53F' : 'none' }} width="20" height="20" viewBox="0 0 70 70" fill='none' xmlns="http://www.w3.org/2000/svg">
               <path d="M43.3038 54.2267C39.6083 60.8533 37.7621 64.1667 35 64.1667C32.2379 64.1667 30.3917 60.8533 26.6963 54.2267L25.7396 52.5117C24.6896 50.6275 24.1646 49.6854 23.3479 49.0642C22.5313 48.4429 21.5104 48.2125 19.4688 47.7517L17.6138 47.3317C10.4388 45.7071 6.85417 44.8962 5.99959 42.1517C5.14792 39.41 7.59209 36.5487 12.4833 30.8292L13.7492 29.3504C15.1375 27.7258 15.8346 26.9121 16.1467 25.9088C16.4588 24.9025 16.3538 23.8175 16.1438 21.6504L15.9513 19.6758C15.2133 12.0429 14.8429 8.22792 17.0771 6.53333C19.3113 4.83875 22.6713 6.38458 29.3854 9.47625L31.1267 10.2754C33.0342 11.1563 33.9879 11.5938 35 11.5938C36.0121 11.5938 36.9658 11.1563 38.8733 10.2754L40.6117 9.47625C47.3288 6.38459 50.6888 4.83875 52.92 6.53042C55.1571 8.22792 54.7867 12.0429 54.0488 19.6758L53.8563 21.6475C53.6463 23.8175 53.5413 24.9025 53.8563 25.9058C54.1654 26.9121 54.8625 27.7258 56.2508 29.3475L57.5167 30.8292C62.4079 36.5458 64.8521 39.4071 64.0004 42.1517C63.1488 44.8963 59.5583 45.71 52.3833 47.3317L50.5283 47.7517C48.4896 48.2125 47.4717 48.4429 46.6521 49.0642C45.8325 49.6854 45.3104 50.6275 44.2604 52.5117L43.3038 54.2267Z" stroke="black" strokeWidth="4.375" />
            </svg>
            <svg onClick={() => { sendRatingHandler(1) }} style={{ fill: userRate && userRate >= 1 ? '#FCD53F' : 'none' }} width="20" height="20" viewBox="0 0 70 70" fill='none' xmlns="http://www.w3.org/2000/svg">
               <path d="M43.3038 54.2267C39.6083 60.8533 37.7621 64.1667 35 64.1667C32.2379 64.1667 30.3917 60.8533 26.6963 54.2267L25.7396 52.5117C24.6896 50.6275 24.1646 49.6854 23.3479 49.0642C22.5313 48.4429 21.5104 48.2125 19.4688 47.7517L17.6138 47.3317C10.4388 45.7071 6.85417 44.8962 5.99959 42.1517C5.14792 39.41 7.59209 36.5487 12.4833 30.8292L13.7492 29.3504C15.1375 27.7258 15.8346 26.9121 16.1467 25.9088C16.4588 24.9025 16.3538 23.8175 16.1438 21.6504L15.9513 19.6758C15.2133 12.0429 14.8429 8.22792 17.0771 6.53333C19.3113 4.83875 22.6713 6.38458 29.3854 9.47625L31.1267 10.2754C33.0342 11.1563 33.9879 11.5938 35 11.5938C36.0121 11.5938 36.9658 11.1563 38.8733 10.2754L40.6117 9.47625C47.3288 6.38459 50.6888 4.83875 52.92 6.53042C55.1571 8.22792 54.7867 12.0429 54.0488 19.6758L53.8563 21.6475C53.6463 23.8175 53.5413 24.9025 53.8563 25.9058C54.1654 26.9121 54.8625 27.7258 56.2508 29.3475L57.5167 30.8292C62.4079 36.5458 64.8521 39.4071 64.0004 42.1517C63.1488 44.8963 59.5583 45.71 52.3833 47.3317L50.5283 47.7517C48.4896 48.2125 47.4717 48.4429 46.6521 49.0642C45.8325 49.6854 45.3104 50.6275 44.2604 52.5117L43.3038 54.2267Z" stroke="black" strokeWidth="4.375" />
            </svg>
         </div>
         <div className="account-header-rate__nums">
            {ratingState.length == 0 ? <p>Ещё нет оценок</p> :
               <p><span>{calculateAverageRating(ratingState)}</span> из 5</p>}

         </div>
      </div>
   )
}

export default AccountHeaderRating